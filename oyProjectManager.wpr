#!wing
#!version=3.0
##################################################################
# Wing IDE project file                                          #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('..'),
                        'excludes': [u'AssetType.py',
                                     u'oySelMan.mel',
                                     u'oyEditCurveFromMeshEdgeNode.mel',
                                     u'oyNukeScriptSmedger.mel',
                                     u'oyAxialCorrectionGroup.py',
                                     u'oyProjectManager/Database.py',
                                     u'oySaveAs.mel',
                                     u'oyFurMapBaker.mel',
                                     u'oyProjectManager/models/Database.py',
                                     u'oyAutoRangeLayer.mel',
                                     u'oyAssetManager.vue',
                                     u'oyFurMapCreatorUI.mel',
                                     u'oyProjectManager/Asset.py',
                                     u'oyProjectManager/UI.py',
                                     u'oyProjectManager/oyProjectManagerUI.py',
                                     u'oyIKFKSetup.mel',
                                     u'oyProjectManager/tools/range.py',
                                     u'oyRenderOneLayer.mel',
                                     u'oyCameraExpander.mel',
                                     u'openGL_test.py',
                                     u'oyShortestEdgePath.mel',
                                     u'oyProjectManager/models/Asset.py',
                                     u'oySmoothComponentAnimation.mel',
                                     u'oyMayaCam2Vue.mel',
                                     u'oyCreateAxialCorrectionGroup.mel',
                                     u'oyProjectManager/UI/MainWindow.py',
                                     u'oyResetCharSet.mel',
                                     u'oyTransferUVs.mel',
                                     u'oyProjectManager/MainWindow.py',
                                     u'oyProjectManager/models',
                                     u'oyRigTools.py',
                                     u'oyConvertToMRTexture.mel',
                                     u'oyProjectManager/tools/Cache.py',
                                     u'oyReferenceTools.py',
                                     u'oyProjectManager/UI_compiler.py',
                                     u'oyAutoRivet.mel',
                                     u'oyProjectManager/models/Sequence.py',
                                     u'oyCurvatureDeformer.mel',
                                     u'oyProjectManager/models/User.py',
                                     u'oyProjectManager/AssetType.py',
                                     u'oyCreateHairFromCurves.mel',
                                     u'oyAddDAGMenuCommands.mel',
                                     u'oyTimeBenchmark.mel',
                                     u'oyProjectManager/models/Structure.py',
                                     u'oyPivotSwitcher.py',
                                     u'oyCreateJointOnCurve.mel',
                                     u'oyFixBoundJoint.mel',
                                     u'oyCutWithJoint.py',
                                     u'oySkinTools.mel',
                                     u'oyAssignShaders.mel',
                                     u'oyFTIExporter.mel',
                                     u'oyProjectManager/UI/UI.py',
                                     u'oyProjectManager/Project.py',
                                     u'oyTracker2Null.mel',
                                     u'oyAuxiliaryFunctions.mel',
                                     u'oyProjectManager/models/Project.py',
                                     u'oyContainerTools.mel',
                                     u'oyEvalRenderLayerSpecificScript.mel',
                                     u'oyProjectManager/oyProjectManager.wpr',
                                     u'oyProjectManager/User.py',
                                     u'oySmedge.py',
                                     u'oyImageConverter.mel',
                                     u'oyAssetManager.py',
                                     u'oyOpenProjectInExplorer.mel',
                                     u'oyIKFKSwitcher.mel',
                                     u'oyFoolPaintTiming.mel',
                                     u'oyProjectManager/ui',
                                     u'oyRetimer.mel',
                                     u'oyCam2Chan.mel',
                                     u'oyMirrorVertex.mel',
                                     u'oyDeReferencer.mel',
                                     u'oyObjectPicker.py',
                                     u'oyCameraFilmOffsetTool.mel',
                                     u'oySmedgeRenderSlicer.mel',
                                     u'oyStretchySpineSetup.mel',
                                     u'oyChanExporter.mel',
                                     u'oyResizeBlendShapeWindow.mel',
                                     u'oyDatabaseEngine.mel',
                                     u'oyProjectManager/models/AssetType.py',
                                     u'oyProjectManager/Structure.py',
                                     u'oyAuxiliaryFunctions.py',
                                     u'oyOpenAs.mel',
                                     u'oyProjectManager/oyProjectManager.py',
                                     u'oyObjectPicker.vue',
                                     u'oyProjectManager/oyProjectManagerUI_compiler.py',
                                     u'oyProjectManager/tools/Range.py',
                                     u'oyParentSwitcher.mel',
                                     u'oyProjectManager/UI/UI_compiler.py',
                                     u'oyLabelExtractor.mel',
                                     u'oyExportBlendConnections.mel',
                                     u'oyRimLightSpot.mel',
                                     u'oyBallisticRuler.vue',
                                     u'oySetProject.mel',
                                     u'oyProjectManager/UI/UI.ui',
                                     u'oyProjectManager/settings.xml',
                                     u'oyProjectManager/Sequence.py',
                                     u'oyDefaultilizer.mel',
                                     u'oyToolbox.mel',
                                     u'pythonAPI_test.py',
                                     u'oyProjectManager',
                                     u'oyAlignToPoleVector.mel',
                                     u'oyResym.mel',
                                     u'oyUVTools.mel'],
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True},
                       {'dirloc': loc('.'),
                        'excludes': (),
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True}]
proj.file-list = [loc('../oyAuxiliaryFunctions.py'),
                  loc('tools/cache.py'),
                  loc('tools/__init__.py'),
                  loc('__init__.py')]
proj.file-type = 'normal'
[user attributes]
debug.err-values = {None: {}}
debug.var-col-widths = [0.38677685950413221,
                        0.61322314049586779]
edit.file-encoding = {loc('../../../../../Documents/cherry/cherry_helloWorld.py'): ''\
        'UTF-8',
                      loc('../../../../../Documents/development/python_decorators_v001.py'): ''\
        'UTF-8',
                      loc('../../../../../Documents/development/python_decorators_v003.py'): ''\
        'UTF-8',
                      loc('../../../../../Documents/development/test_v001.py'): ''\
        'UTF-8',
                      loc('../../../../../geany_cflags_generator.py'): 'UTF-'\
        '8',
                      loc('../AssetType.py'): 'UTF-8',
                      loc('../Cache.py'): 'UTF-8',
                      loc('../MainWindow.py'): 'UTF-8',
                      loc('../User.py'): 'UTF-8',
                      loc('../oyBallisticRuler.py'): 'UTF-8',
                      loc('../oyPivotSwithcer.py'): 'UTF-8',
                      loc('Range.py'): 'UTF-8',
                      loc('Structure.py'): 'UTF-8',
                      loc('__main__.py'): 'UTF-8',
                      loc('../oyProjectManagerUI_compiler.py'): 'UTF-8',
                      loc('../oyShaderAssigner.py'): 'UTF-8',
                      loc('../projManTester_v001.py'): 'UTF-8',
                      loc('../../../../../test.cpp'): 'UTF-8'}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'lWw5QFQu6T4HxJADBazUBhNfwK'\
        'HIdNJ5',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'current_pages': [1,
                                   2],
                 'notebook_display': 'normal',
                 'notebook_percent': 0.43521421107628,
                 'override_title': None,
                 'pagelist': [('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {}),
                              ('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'column-widths': [1.0],
                                 'expanded-nodes': [(0,),
        (1,),
        (2,),
        (3,)],
                                 'selected-nodes': [(1,
        0)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('python-shell',
                               'tall',
                               0,
                               {'attrib-starts': [],
                                'first-line': 0,
                                'folded-linenos': [],
                                'history': {None: ["pm.PyNode('curveShape1')"\
        ".closestPoint( pm.PyNode('locator1').getAttr('t'), True, outParam, "\
        "0.001, 'world' )\n",
        "pm.PyNode('curveShape1').closestPoint( pm.PyNode('locator1').getAtt"\
        "r('t'), True, outParam, 'world' )\n",
        ' import maya.OpenMaya as OpenMaya\n',
        'import maya\n',
        'import maya.cmds as mc\n',
        'mc.NoneType\n',
        'from oyProjectManager import Asset\n',
        'from oyProjectManager.Asset import Asset\n',
        'from oyProjectManager.Project import Project\n',
        'import oyProjectManager.Project.Project\n',
        'import oyProjectManager.Project\n',
        "newProj = Project('TEST_2')\n",
        "newProj = Project.Project('TEST_2')\n",
        'import oyProjectManager.Project as Project\n',
        'mydb.getHomePath()\n',
        'import oyProjectManager.models.database as db\n',
        'mydb = db.Database()\n',
        'mydb.getLastUser()\n',
        'mydb.getProjects()\n',
        'mydb.getServerPath()\n',
        'mydb.getUserInitials()\n',
        'mydb.getUserNames()\n',
        'mydb.getUsers()\n',
        'mydb.updatePathVariables()\n',
        'mydb.updateProjectList()\n',
        'oyPM.ui.mainWindowUI()\n',
        'import oyProjectManager.ui as oyPMUI\n',
        'oyPMUI.mainWindowUI()\n',
        'oyPMUI.mainWindowUI.Ui_MainWindow()\n',
        'reload(oyPMUI)\n',
        'oyPMUI.UI()\n',
        'import oyProjectManager.ui.mainWindow as oyPMUI\n',
        'oyPM.__version__\n',
        'from oyProjectManager import __version__\n',
        '__version__\n',
        'reload(oyPM)\n',
        "mainWindow.UI('MAYA')\n",
        'import os\n',
        "os.path.basename('SH001_ANIMATION_r00_v020_ts.ma')\n",
        "os.path.basename('M:/JOBs/MIGROS/ACILIS_FILMI/_ANIMATIONS/SH001/SH0"\
        "01_ANIMATION_r00_v020_ts.ma')\n",
        "os.path.dirname('M:/JOBs/MIGROS/ACILIS_FILMI/_ANIMATIONS/SH001/SH00"\
        "1_ANIMATION_r00_v020_ts.ma')\n",
        'None < 10\n',
        'None < None\n',
        '1 < None\n',
        "'.ma'.split('.')[-1]\n",
        "'.0.asdfasd.fasdf.ma'.split('.')[-1]\n",
        "'.0.asdfasd.fasdf.'.split('.')[-1]\n",
        'reload(mainWindow)\n',
        "db.getProjectAndSequenceNameFromFilePath( '/home/ozgur/Documents/Wo"\
        "rks/JOBs2/TEST_2/DENEME_SEQ/_ANIMATIONS_/SH001' )\n",
        'import oyProjectManager as oyPM\n',
        'oyPM\n',
        'oyPM()\n',
        'oyProjectManager.__path__\n',
        'import oyProjectManager\n',
        'type(oyProjectManager.__path__)\n',
        'print oyProjectManager.__path__\n',
        'db.getDefaultFiles\n',
        'db.getHomePath\n',
        'db.getHomePath()\n',
        'prj.create()\n',
        'prj.exists()\n',
        "newSeq = prj.createSequence('TEST_SEQ','1-10')\n",
        'from oyProjectManager import dataModels\n',
        "prj = dataModels.Project('TEST_3')\n",
        'seq.create()\n',
        'seq._exists\n',
        "prj = projectModel.Project('TEST_3')\n",
        "seq = prj.createSequence('TEST_SEQ','1-10')\n",
        'seq.getAssetFolders()\n',
        'from oyProjectManager.ui import mainWindow\n',
        'mainWindow.UI()\n',
        'import oyProjectManager.ui.assetIO_mainWindow\n',
        'reload(assetIO_mainWindow)\n',
        'from oyProjectManager.ui import assetIO_mainWindow\n',
        'assetIO_mainWindow.UI()\n',
        'db.getDefaultFiles()\n',
        'db.getLastUser\n',
        'db.getLastUser()\n',
        'db.getServerPath()\n',
        'db.getUserNames()\n',
        'db.getUsers()\n',
        "db.getProjectAndSequenceNameFromFilePath('/home/ozgur/Documents/Wor"\
        "ks/JOBs2/TEST_3/TEST_SEQ')\n",
        'project.create()\n',
        "seq = project.createSequence('NEWSEQ','1-4')\n",
        'type(project)\n',
        'isinstance(project, projectModel.Project)\n',
        "project = projectModel.Project('NEWPROJ')\n",
        "seq = project.createSequence('NEWSEQ2','1-4')\n",
        'db.getProjects()\n',
        'proj.getSequences()\n',
        'proj.getSequenceNames()\n',
        'reload(projectModel)\n',
        'seq = proj.getSequences[1]\n',
        'from oyProjectManager.dataModels import projectModel\n',
        'db = projectModel.Database()\n',
        'proj = projectModel.Project( db.getProjects()[0] )\n',
        'seq = proj.getSequences()[1]\n',
        "seq.getAssetTypes( 'MAYA')\n",
        "for aType in seq.getAssetTypes('MAYA'):\n",
        '\tprint aType.getName()\n']},
                                'sel-line': 20,
                                'sel-line-start': 1053,
                                'selection_end': 1057,
                                'selection_start': 1057}),
                              ('source-assistant',
                               'tall',
                               2,
                               {'docstring-during-complete': False,
                                'wrap-lines': True}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {u'By Module': {'column-w'\
        'idths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('models/__init__.py'),
                      '')]}},
                                'browse_mode': u'By Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('templates',
                               'tall',
                               0,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'current_pages': [2,
                          4],
        'notebook_display': 'tabs only',
        'notebook_percent': 0.40676117775354415,
        'override_title': None,
        'pagelist': [('bookmarks',
                      'wide',
                      1,
                      {'tree-state': []}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('debug-io',
                      'wide',
                      1,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'sel-line': 0,
                       'sel-line-start': 0,
                       'selection_end': 0,
                       'selection_start': 0}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {None: ['dupJoint\n',
        'import oyProjectManager as oyPM\n']},
                       'sel-line': 0,
                       'sel-line-start': 0,
                       'selection_end': 4,
                       'selection_start': 4}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {None: ['sys.path\n',
        'for path in sys.path: print path\n',
        'import pymel\n',
        'import pymel as pm\n',
        'pm.__version__\n',
        'myRotOrder = oyAutoRig.rotationOrder()\n',
        "myRotOrder = oyAutoRig.rotationOrder('1')\n",
        'import oyAutoRig\n',
        "myRotOrder = oyAutoRig.rotationOrder('0')\n",
        'testObj = pm.PyNode\n',
        'import java\n',
        'import javax\n',
        'import twisted\n',
        'help.modules\n',
        'help>modules\n',
        'help\n',
        'help()\n',
        'modules\n',
        'command = "geany -v -g maya.c.tags "\n',
        'defaultPath = "/usr/autodesk/maya/include/maya"\n',
        'os.listdir(defaultPath)\n',
        'headerFiles = os.listdir(defaultPath)\n',
        'defaultPath.join(headerFiles)\n',
        'defaultPath.join(headerFiles+" ")\n',
        '(" "+defaultPath).join(headerFiles)\n',
        'print command,(" "+defaultPath).join(headerFiles)\n',
        'import pydoc\n',
        'import oyObjectPicker\n',
        'pydoc.doc( oyObjectPicker )\n',
        'pydoc.HTMLDoc( oyObjectPicker )\n',
        'import maya.OpenMaya as OpenMaya\n',
        'nAttr = OpenMaya.MFnNumericAttribute\n',
        'nAttr = OpenMaya.MFnNumericAttribute()\n',
        '1%2\n',
        '4%4\n',
        '4%2\n',
        '3%2\n',
        'import sys, os, re\n',
        'from DB_ride\n',
        'import pgdb\n',
        'oyProjectManager.__version__\n',
        'oyProjectManager.ProjectManager.__version__\n',
        'import oyProjectManager\n',
        'oyProjectManager.ProjectManager\n',
        'myPMan = oyProjectManager.ProjectManager\n',
        'myPMan.\n',
        'myPMan._jobsFolder\n',
        'myPMan._ser\n',
        'myPMan._serverPath\n',
        'myPMan._defaultProjectDefinitionFullPath()\n',
        'os.path.join("a","b")\n',
        'os.path.join("a","b","c")\n',
        'os.path.join("E","b","c")\n',
        'os.path.join("E:","b","c")\n',
        'os.path.sep\n',
        'reload( oyProjectManager )\n',
        'myPMan = oyProjectManager.ProjectManager()\n',
        'myPMan._defaultProjectDefinitionFullPath\n',
        'os.walk("M:/JOBs")\n',
        'for path, subdirs, files in os.walk("M:/JOBs"):\n',
        'for path, subdirs, files in os.walk("E:/ozgur"):\n',
        '\tprint subdirs\n',
        'import os\n',
        'for path, subdirs, files in os.walk("E:/ozgur/temp"):\n',
        '    print subdirs\n',
        'os.listdir("M:/JOBs")\n',
        'import oyProjectManager.models.asset as asset\n',
        "myNew = asset.Asset('TEST_2','DENEME_SEQ')\n",
        'sys.modules(\n',
        ')\n',
        'for moduleName in sys.modules.keys:\n',
        '\tprint moduleName, sys.modules[moduleName]\n',
        "if not 'oyProjectManager.models.project' in sys.modules:\n",
        '\tprint "not in module list"\n',
        "if 'oyProjectManager.models.asset' in sys.modules:\n",
        '\tprint "it is in modules"\n',
        'import sys\n',
        'sys.modules\n',
        'for moduleName in sys.modules.keys():\n',
        '\tprint moduleName\n',
        "'oyProjectManager.models.asset' in sys.modules\n",
        "'oyProjectManager.models.sequence' in sys.modules\n",
        "'oyProjectManager.models.user' in sys.modules\n",
        'from oyProjectManager.models import database\n',
        'myDB = database.Database()\n',
        'myDB.getProjects()\n',
        'myDB.getUserInitials\n',
        'myDB.getUserInitials()\n',
        'myDB.getUserNames()\n',
        'myDB.getUsers()\n',
        'from oyProjectManager.models import asset\n',
        'from oyProjectManager.models import project, sequence\n',
        'newProj.getSequenceNames()\n',
        'from oyProjectManager.models import project, sequence, asset\n',
        "newProj = project.Project('TEST_2')\n",
        'newSeq = newProj.getSequences()[0]\n',
        'a = 1\n',
        'a.__abs__\n',
        'a = -1\n',
        'a.__abs__()\n']},
                       'sel-line': 3,
                       'sel-line-start': 133,
                       'selection_end': 137,
                       'selection_start': 137}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'minidom',
                                       'fStartPos': 0,
                                       'fStyle': 'wildcard',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'True',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'column-widths': [0.37828947368421051,
        0.62171052631578949],
                                      'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}})],
        'primary_view_state': {'editor_states': {'bookmarks': ([(loc('ui/assetIO_mainWindow.py'),
        {'attrib-starts': [('MainWindow',
                            28),
                           ('MainWindow.__init__',
                            35)],
         'first-line': 44,
         'folded-linenos': [],
         'sel-line': 86,
         'sel-line-start': 4496,
         'selection_end': 4604,
         'selection_start': 4604},
        1254603275.378861),
        (loc('ui/assetIO_mainWindow.py'),
         {'attrib-starts': [('MainWindow',
                             28),
                            ('MainWindow.updateSequenceList',
                             243)],
          'first-line': 238,
          'folded-linenos': [],
          'sel-line': 259,
          'sel-line-start': 10457,
          'selection_end': 10461,
          'selection_start': 10461},
         1254603307.0582311),
        (loc('dataModels/assetModel.py'),
         {'attrib-starts': [('AssetType',
                             699),
                            ('AssetType.getEnvironments',
                             752)],
          'first-line': 691,
          'folded-linenos': [],
          'sel-line': 752,
          'sel-line-start': 24785,
          'selection_end': 24808,
          'selection_start': 24793},
         1254603796.4781301),
        (loc('dataModels/projectModel.py'),
         {'attrib-starts': [('Sequence',
                             473),
                            ('Sequence.__init__',
                             482)],
          'first-line': 498,
          'folded-linenos': [],
          'sel-line': 511,
          'sel-line-start': 16380,
          'selection_end': 16388,
          'selection_start': 16388},
         1254603798.1535039),
        (loc('dataModels/projectModel.py'),
         {'attrib-starts': [('Sequence',
                             473),
                            ('Sequence.getAssetTypes',
                             964)],
          'first-line': 954,
          'folded-linenos': [],
          'sel-line': 977,
          'sel-line-start': 33690,
          'selection_end': 33731,
          'selection_start': 33731},
         1254603801.5102911),
        (loc('dataModels/assetModel.py'),
         {'attrib-starts': [('AssetType',
                             699),
                            ('AssetType.getEnvironments',
                             752)],
          'first-line': 691,
          'folded-linenos': [],
          'sel-line': 752,
          'sel-line-start': 24785,
          'selection_end': 24808,
          'selection_start': 24793},
         1254603864.945154),
        (loc('ui/assetIO_mainWindow.py'),
         {'attrib-starts': [('MainWindow',
                             28),
                            ('MainWindow.updateSequenceList',
                             243)],
          'first-line': 238,
          'folded-linenos': [],
          'sel-line': 259,
          'sel-line-start': 10457,
          'selection_end': 10461,
          'selection_start': 10461},
         1254603865.496731),
        (loc('dataModels/assetModel.py'),
         {'attrib-starts': [('AssetType',
                             699),
                            ('AssetType.setShotDependency',
                             776)],
          'first-line': 741,
          'folded-linenos': [],
          'sel-line': 782,
          'sel-line-start': 25588,
          'selection_end': 25592,
          'selection_start': 25592},
         1254603866.82657),
        (loc('ui/assetIO_mainWindow.py'),
         {'attrib-starts': [('MainWindow',
                             28),
                            ('MainWindow.updateSequenceList',
                             243)],
          'first-line': 238,
          'folded-linenos': [],
          'sel-line': 259,
          'sel-line-start': 10457,
          'selection_end': 10461,
          'selection_start': 10461},
         1254603935.16168),
        (loc('dataModels/projectModel.py'),
         {'attrib-starts': [('Sequence',
                             473),
                            ('Sequence.convertToVerNumber',
                             952)],
          'first-line': 941,
          'folded-linenos': [],
          'sel-line': 956,
          'sel-line-start': 33085,
          'selection_end': 33103,
          'selection_start': 33103},
         1254603938.816169),
        (loc('ui/assetIO_mainWindow.py'),
         {'attrib-starts': [('MainWindow',
                             28),
                            ('MainWindow.updateSequenceList',
                             243)],
          'first-line': 238,
          'folded-linenos': [],
          'sel-line': 251,
          'sel-line-start': 10210,
          'selection_end': 10248,
          'selection_start': 10248},
         1254604034.6244199),
        (loc('dataModels/assetModel.py'),
         {'attrib-starts': [('AssetType',
                             699),
                            ('AssetType.isShotDependent',
                             736)],
          'first-line': 706,
          'folded-linenos': [],
          'sel-line': 740,
          'sel-line-start': 24465,
          'selection_end': 24469,
          'selection_start': 24469},
         1254604036.1641879),
        (loc('ui/assetIO_mainWindow.py'),
         {'attrib-starts': [('MainWindow',
                             28),
                            ('MainWindow.updateSequenceList',
                             243)],
          'first-line': 238,
          'folded-linenos': [],
          'sel-line': 258,
          'sel-line-start': 10452,
          'selection_end': 10456,
          'selection_start': 10456},
         1254604506.461683),
        (loc('ui/assetIO_mainWindow.py'),
         {'attrib-starts': [('MainWindow',
                             28),
                            ('MainWindow.MayaSave',
                             1079)],
          'first-line': 1070,
          'folded-linenos': [],
          'sel-line': 1095,
          'sel-line-start': 38955,
          'selection_end': 39001,
          'selection_start': 39001},
         1254604509.1346209),
        (loc('dataModels/assetModel.py'),
         {'attrib-starts': [('AssetType',
                             699),
                            ('AssetType.getName',
                             720)],
          'first-line': 706,
          'folded-linenos': [],
          'sel-line': 724,
          'sel-line-start': 24040,
          'selection_end': 24044,
          'selection_start': 24044},
         1254604723.8252931),
        (loc('dataModels/assetModel.py'),
         {'attrib-starts': [('Asset',
                             5),
                            ('Asset.setInfoVariables',
                             60)],
          'first-line': 49,
          'folded-linenos': [],
          'sel-line': 68,
          'sel-line-start': 1986,
          'selection_end': 1994,
          'selection_start': 1994},
         1254604728.813298),
        (loc('dataModels/projectModel.py'),
         {'attrib-starts': [('Sequence',
                             473),
                            ('Sequence.convertToVerNumber',
                             952)],
          'first-line': 941,
          'folded-linenos': [],
          'sel-line': 956,
          'sel-line-start': 33085,
          'selection_end': 33103,
          'selection_start': 33103},
         1254606521.721427),
        (loc('dataModels/projectModel.py'),
         {'attrib-starts': [('Structure',
                             1218),
                            ('Structure.getOutputFolders',
                             1286)],
          'first-line': 1244,
          'folded-linenos': [],
          'sel-line': 1289,
          'sel-line-start': 43676,
          'selection_end': 43710,
          'selection_start': 43710},
         1254606528.8743401),
        (loc('dataModels/projectModel.py'),
         {'attrib-starts': [('Sequence',
                             473)],
          'first-line': 450,
          'folded-linenos': [],
          'sel-line': 473,
          'sel-line-start': 14953,
          'selection_end': 14967,
          'selection_start': 14959},
         1254608490.602324),
        [loc('dataModels/projectModel.py'),
         {'attrib-starts': [('Sequence',
                             473)],
          'first-line': 450,
          'folded-linenos': [],
          'sel-line': 473,
          'sel-line-start': 14953,
          'selection_end': 14967,
          'selection_start': 14959},
         1254608492.800235]],
        19),
        'current-loc': loc('dataModels/projectModel.py'),
        'editor-states': {loc('__init__.py'): {'attrib-starts': [],
        'first-line': 263,
        'folded-linenos': [],
        'sel-line': 295,
        'sel-line-start': 13195,
        'selection_end': 13205,
        'selection_start': 13205},
                          loc('dataModels/assetModel.py'): {'attrib-starts': [(''\
        'Asset',
        5),
        ('Asset.setInfoVariables',
         60)],
        'first-line': 49,
        'folded-linenos': [],
        'sel-line': 68,
        'sel-line-start': 1986,
        'selection_end': 1994,
        'selection_start': 1994},
                          loc('dataModels/projectModel.py'): {'attrib-starts': [(''\
        'Sequence',
        473),
        ('Sequence._readSettings',
         521)],
        'first-line': 515,
        'folded-linenos': [],
        'sel-line': 529,
        'sel-line-start': 16935,
        'selection_end': 16991,
        'selection_start': 16991},
                          loc('ui/assetIO_mainWindow.py'): {'attrib-starts': [(''\
        'MainWindow',
        28),
        ('MainWindow.MayaSave',
         1079)],
        'first-line': 1070,
        'folded-linenos': [],
        'sel-line': 1095,
        'sel-line-start': 38955,
        'selection_end': 39001,
        'selection_start': 39001},
                          loc('ui/uiCompiler.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 3,
        'sel-line-start': 53,
        'selection_end': 66,
        'selection_start': 66}},
        'has-focus': True},
                               'open_files': [u'ui/uiCompiler.py',
        u'__init__.py',
        u'ui/assetIO_mainWindow.py',
        u'dataModels/assetModel.py',
        u'dataModels/projectModel.py']},
        'split_percents': {0: 0.4848993288590604},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'split_percents': {0: 0.72975929978118159},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (148,
                         77,
                         1900,
                         990)}]}
guimgr.recent-documents = [loc('dataModels/projectModel.py'),
                           loc('dataModels/assetModel.py'),
                           loc('ui/assetIO_mainWindow.py'),
                           loc('__init__.py')]
guimgr.visual-state = {loc('../../../../../.wingide3/pi-cache/2.5/usr/autodesk/maya/lib/python2.5/site-packages/PyQt4/QtGui.pi'): {''\
        'attrib-starts': [],
        'first-line': 13702,
        'folded-linenos': [],
        'sel-line': 13725,
        'sel-line-start': 143979,
        'selection_end': 143987,
        'selection_start': 143979},
                       loc('../../../../../Documents/cherry/cherry_helloWorld.py'): {''\
        'attrib-starts': [('HelloWorld',
                           2),
                          ('HelloWorld.index',
                           3)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 154,
        'selection_end': 154,
        'selection_start': 154},
                       loc('../../../../../Documents/development/PyQt4_Tests/boxLayout.py'): {''\
        'attrib-starts': [('BoxLayout',
                           11),
                          ('BoxLayout.__init__',
                           15)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 42,
        'sel-line-start': 937,
        'selection_end': 958,
        'selection_start': 958},
                       loc('../../../../../Documents/development/PyQt4_Tests/gridLayout.py'): {''\
        'attrib-starts': [('GridLayout',
                           12),
                          ('GridLayout.__init__',
                           16)],
        'first-line': 2,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 367,
        'selection_end': 392,
        'selection_start': 392},
                       loc('../../../../../Documents/development/PyQt4_Tests/mainWindow.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 4,
        'sel-line-start': 65,
        'selection_end': 86,
        'selection_start': 86},
                       loc('../../../../../Documents/development/python_decorators_v002.py'): {''\
        'attrib-starts': [('entryExit',
                           0),
                          ('entryExit.__init__',
                           2)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 3,
        'sel-line-start': 57,
        'selection_end': 75,
        'selection_start': 75},
                       loc('../../../../../Documents/development/python_decorators_v003.py'): {''\
        'attrib-starts': [('func1',
                           9)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 9,
        'sel-line-start': 149,
        'selection_end': 161,
        'selection_start': 161},
                       loc('../../../../../Documents/development/test_v001.py'): {''\
        'attrib-starts': [('select_sublist',
                           0)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 6,
        'sel-line-start': 217,
        'selection_end': 217,
        'selection_start': 217},
                       loc('../../../../../Documents/maya_development/furMapCreator/furMapCreator/furMapCreator.h'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 350,
        'selection_end': 378,
        'selection_start': 378},
                       loc('../../../../../Documents/maya_development/furMapCreator/furMapCreator/furMapCreatorCmd.cpp'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 24,
        'sel-line-start': 624,
        'selection_end': 624,
        'selection_start': 624},
                       loc('../../../../../geany_cflags_generator.py'): {'at'\
        'trib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 3,
        'sel-line-start': 48,
        'selection_end': 78,
        'selection_start': 78},
                       loc('../../mayaHacks/userSetup.mel'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../mayaHacks/userSetup.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../AssetType.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../Cache.py'): {'attrib-starts': [('CachedMethod',
        1)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 100,
        'selection_end': 130,
        'selection_start': 130},
                       loc('../MainWindow.py'): {'attrib-starts': [('MainWin'\
        'dow',
        1),
        ('MainWindow._updateSequenceObject',
         891)],
        'first-line': 857,
        'folded-linenos': [],
        'sel-line': 903,
        'sel-line-start': 32180,
        'selection_end': 32219,
        'selection_start': 32219},
                       loc('../User.py'): {'attrib-starts': [('User',
        1),
        ('User.setInitials',
         41)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 44,
        'sel-line-start': 1114,
        'selection_end': 1147,
        'selection_start': 1147},
                       loc('../oyAddDAGMenuCommands.mel'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../oyAssetManager.py'): {'attrib-starts': [('Ass'\
        'et',
        783),
        ('Asset.set_info_variables',
         831)],
        'first-line': 926,
        'folded-linenos': [],
        'sel-line': 835,
        'sel-line-start': 25880,
        'selection_end': 25900,
        'selection_start': 25900},
                       loc('../oyAutoRig.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../oyAuxiliaryFunctions.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 9,
        'sel-line-start': 139,
        'selection_end': 172,
        'selection_start': 172},
                       loc('../oyAxialCorrectionGroup.py'): {'attrib-starts': [(''\
        'createAxialCorrectionGroup',
        32)],
        'first-line': 14,
        'folded-linenos': [],
        'sel-line': 53,
        'sel-line-start': 1471,
        'selection_end': 1517,
        'selection_start': 1517},
                       loc('../oyBallisticRuler.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 502,
        'selection_end': 504,
        'selection_start': 504},
                       loc('../oyObjectPicker.py'): {'attrib-starts': [('Pic'\
        'kedObject',
        88),
        ('PickedObject.getWeightAlias',
         403)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 425,
        'sel-line-start': 14700,
        'selection_end': 14704,
        'selection_start': 14704},
                       loc('../oyPivotSwitcher.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 2,
        'selection_start': 2},
                       loc('../oyProjectManager.py'): {'attrib-starts': [('C'\
        'achedMethod',
        305),
        ('CachedMethod.__repr__',
         361)],
        'first-line': 368,
        'folded-linenos': [],
        'sel-line': 369,
        'sel-line-start': 15452,
        'selection_end': 15452,
        'selection_start': 15452},
                       loc('Asset.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 1,
        'selection_end': 1,
        'selection_start': 1},
                       loc('AssetType.py'): {'attrib-starts': [('AssetType',
        1)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 240,
        'selection_end': 244,
        'selection_start': 244},
                       loc('Cache.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('Database.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 63,
        'selection_end': 63,
        'selection_start': 63},
                       loc('MainWindow.py'): {'attrib-starts': [('UI',
        1)],
        'first-line': 874,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 318,
        'selection_end': 403,
        'selection_start': 403},
                       loc('Project.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 189,
        'selection_end': 189,
        'selection_start': 189},
                       loc('Range.py'): {'attrib-starts': [('RangeConverter',
        1),
        ('RangeConverter.convertRangeToList',
         9)],
        'first-line': 1,
        'folded-linenos': [],
        'sel-line': 47,
        'sel-line-start': 1536,
        'selection_end': 1559,
        'selection_start': 1559},
                       loc('Sequence.py'): {'attrib-starts': [('Sequence',
        10),
        ('Sequence.__init__',
         19)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 27,
        'sel-line-start': 836,
        'selection_end': 844,
        'selection_start': 844},
                       loc('Structure.py'): {'attrib-starts': [('Structure',
        1)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 98,
        'selection_end': 132,
        'selection_start': 132},
                       loc('UI.py'): {'attrib-starts': [('Ui_MainWindow',
        11),
        ('Ui_MainWindow.setupUi',
         12)],
                                      'first-line': 313,
                                      'folded-linenos': [],
                                      'sel-line': 13,
                                      'sel-line-start': 383,
                                      'selection_end': 406,
                                      'selection_start': 406},
                       loc('UI_compiler.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('User.py'): {'attrib-starts': [('User',
        1),
        ('User.getName',
         17)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 18,
        'sel-line-start': 484,
        'selection_end': 516,
        'selection_start': 516},
                       loc('__init__.py'): {'attrib-starts': [],
        'first-line': 139,
        'folded-linenos': [],
        'sel-line': 153,
        'sel-line-start': 6725,
        'selection_end': 6766,
        'selection_start': 6766},
                       loc('__main__.py'): {'attrib-starts': [('main',
        5)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 6,
        'sel-line-start': 115,
        'selection_end': 140,
        'selection_start': 140},
                       loc('dataModels/projectModel.py'): {'attrib-starts': [(''\
        'Sequence',
        470),
        ('Sequence.create',
         711)],
        'first-line': 703,
        'folded-linenos': [],
        'sel-line': 735,
        'sel-line-start': 25872,
        'selection_end': 25876,
        'selection_start': 25876},
                       loc('dataModels/serverModel.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('models/__init__.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('models/asset.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 15,
        'selection_end': 15,
        'selection_start': 15},
                       loc('models/assetType.py'): {'attrib-starts': [('Asse'\
        'tType',
        1),
        ('AssetType.getPlayblastFolder',
         44)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 51,
        'sel-line-start': 1408,
        'selection_end': 1461,
        'selection_start': 1461},
                       loc('models/database.py'): {'attrib-starts': [('Datab'\
        'ase',
        8),
        ('Database.getHomePath',
         186)],
        'first-line': 184,
        'folded-linenos': [],
        'sel-line': 204,
        'sel-line-start': 6347,
        'selection_end': 6387,
        'selection_start': 6387},
                       loc('models/project.py'): {'attrib-starts': [('Projec'\
        't',
        7),
        ('Project.create',
         41)],
        'first-line': 42,
        'folded-linenos': [],
        'sel-line': 49,
        'sel-line-start': 1333,
        'selection_end': 1337,
        'selection_start': 1337},
                       loc('models/sequence.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 102,
        'selection_end': 102,
        'selection_start': 102},
                       loc('models/structure.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('models/user.py'): {'attrib-starts': [('User',
        1)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 4,
        'sel-line-start': 135,
        'selection_end': 139,
        'selection_start': 139},
                       loc('oyProjectManager.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('settings.xml'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('tools/cache.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 12,
        'selection_end': 12,
        'selection_start': 12},
                       loc('ui/__init__.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('ui/mainWindow.py'): {'attrib-starts': [('MainWin'\
        'dow',
        28),
        ('MainWindow.fillFieldsFromFileInfo',
         145)],
        'first-line': 177,
        'folded-linenos': [],
        'sel-line': 202,
        'sel-line-start': 8615,
        'selection_end': 8623,
        'selection_start': 8623},
                       loc('ui/mainWindowUI.py'): {'attrib-starts': [('Ui_Ma'\
        'inWindow',
        11),
        ('Ui_MainWindow.setupUi',
         12)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 24,
        'sel-line-start': 1010,
        'selection_end': 1099,
        'selection_start': 1099},
                       loc('../oyProjectManagerUI.py'): {'attrib-starts': [(''\
        'Ui_MainWindow',
        11),
        ('Ui_MainWindow.setupUi',
         12)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 12,
        'sel-line-start': 348,
        'selection_end': 380,
        'selection_start': 370},
                       loc('../oyProjectManagerUI_compiler.py'): {'attrib-st'\
        'arts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 344,
        'selection_end': 344,
        'selection_start': 344},
                       loc('../oyReferenceTools.py'): {'attrib-starts': [('R'\
        'eference',
        2),
        ('Reference.getReferenceNodes',
         13)],
        'first-line': 185,
        'folded-linenos': [],
        'sel-line': 18,
        'sel-line-start': 486,
        'selection_end': 511,
        'selection_start': 511},
                       loc('../oyRigTools.py'): {'attrib-starts': [('oyRigJo'\
        'int',
        589),
        ('oyRigJoint._createAttributes',
         639)],
        'first-line': 602,
        'folded-linenos': [],
        'sel-line': 659,
        'sel-line-start': 22228,
        'selection_end': 22232,
        'selection_start': 22232},
                       loc('../oyShaderAssigner.py'): {'attrib-starts': [('S'\
        'haderAssigner',
        28),
        ('ShaderAssigner.assignObjects',
         40)],
        'first-line': 22,
        'folded-linenos': [],
        'sel-line': 41,
        'sel-line-start': 864,
        'selection_end': 894,
        'selection_start': 894},
                       loc('../../plugins/closestPointOnCurve.py'): {'attrib'\
        '-starts': [('closestPointOnCurve',
                     11)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 312,
        'selection_end': 313,
        'selection_start': 313},
                       loc('../../plugins/oyTrajectoryDrawer.py'): {'attrib-'\
        'starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 7,
        'sel-line-start': 129,
        'selection_end': 131,
        'selection_start': 131},
                       loc('../../../pumpThread.py'): {'attrib-starts': [('p'\
        'umpQt',
        14),
        ('pumpQt.processor',
         17)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 295,
        'selection_end': 307,
        'selection_start': 307},
                       loc('../../../pymel/core/animation.py'): {'attrib-sta'\
        'rts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../../pymel/core/general.py'): {'attrib-start'\
        's': [('listRelatives',
               584)],
        'first-line': 569,
        'folded-linenos': [],
        'sel-line': 584,
        'sel-line-start': 22075,
        'selection_end': 22092,
        'selection_start': 22079},
                       loc('../../../pymel/core/system.py'): {'attrib-starts': [(''\
        'saveAs',
        1377)],
        'first-line': 1353,
        'folded-linenos': [],
        'sel-line': 1377,
        'sel-line-start': 52167,
        'selection_end': 52177,
        'selection_start': 52171},
                       loc('../../../pymel/mayahook/mayautils.py'): {'attrib'\
        '-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../../../../test.cpp'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../../../../../../media/PERSONAL/ozgur/My Documents/maya/scripts/oy-maya-scripts/mayaHacks/userSetup.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../../../../../../media/PERSONAL/ozgur/My Documents/maya/scripts/oy-maya-scripts/oyTools/oyAssetManager.py'): {''\
        'attrib-starts': [('AssetBase',
                           4),
                          ('AssetBase.__init__',
                           9)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 378,
        'selection_end': 384,
        'selection_start': 384},
                       loc('../../../../../../../usr/autodesk/maya/devkit/plug-ins/scripted/circleNode.py'): {''\
        'attrib-starts': [('initializePlugin',
                           173)],
        'first-line': 80,
        'folded-linenos': [],
        'sel-line': 175,
        'sel-line-start': 6389,
        'selection_end': 6394,
        'selection_start': 6394},
                       loc('../../../../../../../usr/autodesk/maya/devkit/plug-ins/scripted/footPrintNode.py'): {''\
        'attrib-starts': [],
        'first-line': 136,
        'folded-linenos': [],
        'sel-line': 12,
        'sel-line-start': 563,
        'selection_end': 630,
        'selection_start': 630},
                       loc('../../../../../../../usr/autodesk/maya/devkit/plug-ins/scripted/torusField.py'): {''\
        'attrib-starts': [],
        'first-line': 94,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../../../../../../usr/lib/python2.6/xml/dom/__init__.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../../../../../../usr/lib/python2.6/xml/dom/minidom.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 5,
        'selection_end': 12,
        'selection_start': 5},
                       loc('../../../../../../../usr/share/applications/geany.desktop'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #1'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #2'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #3'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #4'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ["myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           'import java\n',
                           'import javax\n',
                           'import twisted\n',
                           'help.modules\n',
                           'help>modules\n',
                           'help\n',
                           'help()\n',
                           'modules\n',
                           'command = "geany -v -g maya.c.tags "\n',
                           'defaultPath = "/usr/autodesk/maya/include/maya"\n',
                           'os.listdir(defaultPath)\n',
                           'headerFiles = os.listdir(defaultPath)\n',
                           'defaultPath.join(headerFiles)\n',
                           'defaultPath.join(headerFiles+" ")\n',
                           '(" "+defaultPath).join(headerFiles)\n',
                           'print command,(" "+defaultPath).join(headerFiles'\
                           ')\n',
                           'import pydoc\n',
                           'import oyObjectPicker\n',
                           'pydoc.doc( oyObjectPicker )\n',
                           'pydoc.HTMLDoc( oyObjectPicker )\n',
                           'import maya.OpenMaya as OpenMaya\n',
                           'nAttr = OpenMaya.MFnNumericAttribute\n',
                           'nAttr = OpenMaya.MFnNumericAttribute()\n',
                           '1%2\n',
                           '4%4\n',
                           '4%2\n',
                           '3%2\n',
                           'import sys, os, re\n',
                           'from DB_ride\n',
                           'import pgdb\n',
                           'oyProjectManager.__version__\n',
                           'oyProjectManager.ProjectManager.__version__\n',
                           'import oyProjectManager\n',
                           'oyProjectManager.ProjectManager\n',
                           'myPMan = oyProjectManager.ProjectManager\n',
                           'myPMan.\n',
                           'myPMan._jobsFolder\n',
                           'myPMan._ser\n',
                           'myPMan._serverPath\n',
                           'myPMan._defaultProjectDefinitionFullPath()\n',
                           'os.path.join("a","b")\n',
                           'os.path.join("a","b","c")\n',
                           'os.path.join("E","b","c")\n',
                           'os.path.join("E:","b","c")\n',
                           'os.path.sep\n',
                           'reload( oyProjectManager )\n',
                           'myPMan = oyProjectManager.ProjectManager()\n',
                           'myPMan._defaultProjectDefinitionFullPath\n',
                           'os.walk("M:/JOBs")\n',
                           'for path, subdirs, files in os.walk("M:/JOBs"):\n',
                           'for path, subdirs, files in os.walk("E:/ozgur"):'\
                           '\n',
                           '\tprint subdirs\n',
                           'import os\n',
                           'for path, subdirs, files in os.walk("E:/ozgur/te'\
                           'mp"):\n',
                           '    print subdirs\n',
                           'os.listdir("M:/JOBs")\n',
                           'import oyProjectManager.models.asset as asset\n',
                           "myNew = asset.Asset('TEST_2','DENEME_SEQ')\n",
                           'sys.modules(\n',
                           ')\n',
                           'for moduleName in sys.modules.keys:\n',
                           '\tprint moduleName, sys.modules[moduleName]\n',
                           "if not 'oyProjectManager.models.project' in sys."\
                           "modules:\n",
                           '\tprint "not in module list"\n',
                           "if 'oyProjectManager.models.asset' in sys.module"\
                           "s:\n",
                           '\tprint "it is in modules"\n',
                           'import sys\n',
                           'sys.modules\n',
                           'for moduleName in sys.modules.keys():\n',
                           '\tprint moduleName\n',
                           "'oyProjectManager.models.asset' in sys.modules\n",
                           "'oyProjectManager.models.sequence' in sys.module"\
                           "s\n",
                           "'oyProjectManager.models.user' in sys.modules\n",
                           'from oyProjectManager.models import database\n',
                           'myDB = database.Database()\n',
                           'myDB.getProjects()\n',
                           'myDB.getUserInitials\n',
                           'myDB.getUserInitials()\n',
                           'myDB.getUserNames()\n',
                           'myDB.getUsers()\n',
                           'from oyProjectManager.models import asset\n',
                           'from oyProjectManager.models import project, seq'\
                           'uence\n',
                           'newProj.getSequenceNames()\n',
                           'from oyProjectManager.models import project, seq'\
                           'uence, asset\n',
                           "newProj = project.Project('TEST_2')\n",
                           'newSeq = newProj.getSequences()[0]\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #5'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #6'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ['os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           'import java\n',
                           'import javax\n',
                           'import twisted\n',
                           'help.modules\n',
                           'help>modules\n',
                           'help\n',
                           'help()\n',
                           'modules\n',
                           'command = "geany -v -g maya.c.tags "\n',
                           'defaultPath = "/usr/autodesk/maya/include/maya"\n',
                           'import os\n',
                           'os.listdir(defaultPath)\n',
                           'headerFiles = os.listdir(defaultPath)\n',
                           'defaultPath.join(headerFiles)\n',
                           'defaultPath.join(headerFiles+" ")\n',
                           '(" "+defaultPath).join(headerFiles)\n',
                           'print command,(" "+defaultPath).join(headerFiles'\
                           ')\n',
                           'print range(1,10)\n',
                           'print range(10,1)\n',
                           'print range(0,10)\n',
                           'print range(0,11)\n',
                           'print range(0,9)\n',
                           'print range(9,11)\n',
                           'import maya.OpenMaya as OpenMaay\n',
                           'myVector1 = OpenMaya.MVector( 1.0 ,0,0 )\n',
                           'myVector2 = OpenMaya.MVector( 0.0 ,1.0,0 )\n',
                           'print myVector1 ^ myVector2\n',
                           'print (myVector1 ^ myVector2).x\n',
                           'print (myVector1 ^ myVector2).y\n',
                           'print (myVector1 ^ myVector2).z\n',
                           'import maya.OpenMaya as OpenMaya\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #7'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #8'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #9'): {'attrib-starts': [('oz'\
        'gur',
        2)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 2,
        'selection_end': 14,
        'selection_start': 14},
                       loc('unknown:<untitled> #10'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #11'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n',
                           'import hou\n',
                           'import oyProjectManager,\n',
                           'import oyProjectManager\n',
                           'import oyProjectManager as oyPM\n',
                           'oyPM.UI()\n']},
        'sel-line': 5,
        'sel-line-start': 223,
        'selection_end': 227,
        'selection_start': 227},
                       loc('unknown:<untitled> #12'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['a = "adene"\n',
                           'exit()\n',
                           'for keys os.environ.keys\n',
                           'prnit keys\n',
                           'prnit key\n',
                           'for keys os.environ.keys:\n',
                           'print keys\n',
                           'for keys in os.environ.keys:\n',
                           'for keys in os.environ.keys():\n',
                           '\tprint keys\n',
                           "print os.environ.key['PLATFORM']\n",
                           "print os.environ.keys['PLATFORM']\n",
                           "print os.environ.get('PLATFORM')\n",
                           "print os.environ.get('PROCESSOR_ARCHITECTURE')\n",
                           'import os\n',
                           'os.name\n',
                           'import sys\n',
                           "sys.path.append('E:\\ozgur\\My Documents\\maya\\"\
                           "scripts\\pymel')\n",
                           '__init__\n',
                           'exit\n',
                           'import pymel as pm\n']},
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #13'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           'import java\n',
                           'import javax\n',
                           'import twisted\n',
                           'help.modules\n',
                           'help>modules\n',
                           'help\n',
                           'help()\n',
                           'modules\n',
                           'command = "geany -v -g maya.c.tags "\n',
                           'defaultPath = "/usr/autodesk/maya/include/maya"\n',
                           'import os\n',
                           'os.listdir(defaultPath)\n',
                           'headerFiles = os.listdir(defaultPath)\n',
                           'defaultPath.join(headerFiles)\n',
                           'defaultPath.join(headerFiles+" ")\n',
                           '(" "+defaultPath).join(headerFiles)\n',
                           'print command,(" "+defaultPath).join(headerFiles'\
                           ')\n']},
        'sel-line': 1,
        'sel-line-start': 48,
        'selection_end': 48,
        'selection_start': 48},
                       loc('unknown:<untitled> #14'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #15'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #16'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['all(myRigger)\n',
                           'classmethod(myRigger)\n',
                           'locals\n',
                           'locals()\n',
                           'repr(oyRT)\n',
                           'myRigger = oyRT.oyRigger()\n',
                           'repr(myRigger)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3)\n',
                           'reload(oyRigTools)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, useSplit=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=False)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=15,'\
                           ' us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=5, '\
                           'us=True)\n',
                           'myRigger\n',
                           'myList = [1]\n',
                           'print myList[1]\n',
                           'print myList[0]\n',
                           'pm.Joint()\n',
                           'myJoint = pm.Joint()\n',
                           'print myJoint\n',
                           'listRelatives( myJoint, c = True)\n',
                           'pm.listRelatives( myJoint, c = True)\n',
                           'if pm.listRelatives( myJoint, c = True) is None:'\
                           '\n',
                           'if len(pm.listRelatives( myJoint, c = True)) == '\
                           '0:\n',
                           "\tprint 'there is no child'\n",
                           'print myList[-1]\n',
                           'myList[-1]\n',
                           'type(myList[-1])\n',
                           "'sadf'.ljust(32)\n",
                           "'sadf'.center(32)\n",
                           "'*' * 10\n",
                           "'*' * 20\n",
                           'range(10,3,-1)\n',
                           'range(a,s)\n',
                           'myList.insert(2, range(11,15))\n',
                           'myList = origMyList\n',
                           'myList.insert(2, range(11,15)[:])\n',
                           'origMyList = myList\n',
                           'myList.append(range(11,15))\n',
                           'myList = []\n',
                           'myList.append(0)\n',
                           'myList.append(1)\n',
                           'myList.append(2)\n',
                           'myList.append(3)\n',
                           'myList.append(4)\n',
                           'myList.append(5)\n',
                           'for i in range(len(myList)-1,-1,-1):\n',
                           '\tprint i\n',
                           'myList.remove(5)\n',
                           'print myList\n',
                           "myList[0] = 'a'\n",
                           "myList[1] = 'b'\n",
                           "myList[2] = 'c'\n",
                           "myList[3] = 'd'\n",
                           "myList[4] = 'e'\n",
                           "myList[5] = 'f'\n",
                           "myList.append('f')\n",
                           'myList.remove(1)\n',
                           'myList.pop(0)\n',
                           'myList\n',
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb')\n",
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb',f=True)\n",
                           'pm.ls\n',
                           "pm.ls(type='joint')\n",
                           'import oyRigTools as oyRT\n',
                           'pm.undo\n',
                           'reload(oyRT)\n',
                           'myRigger = oyRT.oyLimbRigger()\n',
                           "myRigger.set_baseJoint('joint1')\n",
                           'myRigger.setupLimb()\n',
                           'pm.undo()\n',
                           '[1,2,3] * 2\n',
                           '[1,2,3] * -1\n',
                           'import maya._OpenMaya\n',
                           'import pymel\n',
                           'pymel.loadPlugin("closestPointOnCurve")\n',
                           'pymel.loadPlugin("spClosestPointOnCurve")\n',
                           'pymel.loadPlugin("closestPointOnCurve.py")\n',
                           "cPOC = pymel.createNode('spClosestPointOnCurve')"\
                           "\n",
                           'cPos\n',
                           'cPOC\n',
                           'exit()\n',
                           'import pymel as pm\n',
                           'pm.ls()\n',
                           "open('/home/ozgur/maya/projects/default/scenes/c"\
                           "losestPointOnCurve_test_v001.ma')\n",
                           "pm.fileOpen('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.openFile('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.ls(type='nurbsCurve')\n",
                           "pm.ls(type='transform')\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('pos') )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t') )\n",
                           'outParam = 0.0\n',
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), outParam, 0.001, 'wor"\
                           "ld' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), true, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 'worl"\
                           "d' )\n",
                           ' import maya.OpenMaya as OpenMaya\n',
                           'import maya\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #17'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['all(myRigger)\n',
                           'classmethod(myRigger)\n',
                           'locals\n',
                           'locals()\n',
                           'repr(oyRT)\n',
                           'myRigger = oyRT.oyRigger()\n',
                           'repr(myRigger)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3)\n',
                           'reload(oyRigTools)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, useSplit=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=False)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=15,'\
                           ' us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=5, '\
                           'us=True)\n',
                           'myRigger\n',
                           'myList = [1]\n',
                           'print myList[1]\n',
                           'print myList[0]\n',
                           'pm.Joint()\n',
                           'myJoint = pm.Joint()\n',
                           'print myJoint\n',
                           'listRelatives( myJoint, c = True)\n',
                           'pm.listRelatives( myJoint, c = True)\n',
                           'if pm.listRelatives( myJoint, c = True) is None:'\
                           '\n',
                           'if len(pm.listRelatives( myJoint, c = True)) == '\
                           '0:\n',
                           "\tprint 'there is no child'\n",
                           'print myList[-1]\n',
                           'myList[-1]\n',
                           'type(myList[-1])\n',
                           "'sadf'.ljust(32)\n",
                           "'sadf'.center(32)\n",
                           "'*' * 10\n",
                           "'*' * 20\n",
                           'range(10,3,-1)\n',
                           'range(a,s)\n',
                           'myList.insert(2, range(11,15))\n',
                           'myList = origMyList\n',
                           'myList.insert(2, range(11,15)[:])\n',
                           'origMyList = myList\n',
                           'myList.append(range(11,15))\n',
                           'myList = []\n',
                           'myList.append(0)\n',
                           'myList.append(1)\n',
                           'myList.append(2)\n',
                           'myList.append(3)\n',
                           'myList.append(4)\n',
                           'myList.append(5)\n',
                           'for i in range(len(myList)-1,-1,-1):\n',
                           '\tprint i\n',
                           'myList.remove(5)\n',
                           'print myList\n',
                           "myList[0] = 'a'\n",
                           "myList[1] = 'b'\n",
                           "myList[2] = 'c'\n",
                           "myList[3] = 'd'\n",
                           "myList[4] = 'e'\n",
                           "myList[5] = 'f'\n",
                           "myList.append('f')\n",
                           'myList.remove(1)\n',
                           'myList.pop(0)\n',
                           'myList\n',
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb')\n",
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb',f=True)\n",
                           'pm.ls\n',
                           "pm.ls(type='joint')\n",
                           'import oyRigTools as oyRT\n',
                           'pm.undo\n',
                           'reload(oyRT)\n',
                           'myRigger = oyRT.oyLimbRigger()\n',
                           "myRigger.set_baseJoint('joint1')\n",
                           'myRigger.setupLimb()\n',
                           'pm.undo()\n',
                           '[1,2,3] * 2\n',
                           '[1,2,3] * -1\n',
                           'import maya._OpenMaya\n',
                           'import pymel\n',
                           'pymel.loadPlugin("closestPointOnCurve")\n',
                           'pymel.loadPlugin("spClosestPointOnCurve")\n',
                           'pymel.loadPlugin("closestPointOnCurve.py")\n',
                           "cPOC = pymel.createNode('spClosestPointOnCurve')"\
                           "\n",
                           'cPos\n',
                           'cPOC\n',
                           'exit()\n',
                           'import pymel as pm\n',
                           'pm.ls()\n',
                           "open('/home/ozgur/maya/projects/default/scenes/c"\
                           "losestPointOnCurve_test_v001.ma')\n",
                           "pm.fileOpen('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.openFile('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.ls(type='nurbsCurve')\n",
                           "pm.ls(type='transform')\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('pos') )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t') )\n",
                           'outParam = 0.0\n',
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), outParam, 0.001, 'wor"\
                           "ld' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), true, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 'worl"\
                           "d' )\n",
                           ' import maya.OpenMaya as OpenMaya\n',
                           'import maya\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #18'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #19'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['a = "adene"\n',
                           'exit()\n',
                           'for keys os.environ.keys\n',
                           'prnit keys\n',
                           'prnit key\n',
                           'for keys os.environ.keys:\n',
                           'print keys\n',
                           'for keys in os.environ.keys:\n',
                           'for keys in os.environ.keys():\n',
                           '\tprint keys\n',
                           "print os.environ.key['PLATFORM']\n",
                           "print os.environ.keys['PLATFORM']\n",
                           "print os.environ.get('PLATFORM')\n",
                           "print os.environ.get('PROCESSOR_ARCHITECTURE')\n",
                           'import os\n',
                           'os.name\n',
                           'import sys\n',
                           "sys.path.append('E:\\ozgur\\My Documents\\maya\\"\
                           "scripts\\pymel')\n",
                           '__init__\n',
                           'exit\n',
                           'import pymel as pm\n']},
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #20'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #21'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #22'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['locals()\n',
                           'repr(oyRT)\n',
                           'myRigger = oyRT.oyRigger()\n',
                           'repr(myRigger)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3)\n',
                           'reload(oyRigTools)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, useSplit=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=False)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=15,'\
                           ' us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=5, '\
                           'us=True)\n',
                           'myRigger\n',
                           'myList = [1]\n',
                           'print myList[1]\n',
                           'print myList[0]\n',
                           'pm.Joint()\n',
                           'myJoint = pm.Joint()\n',
                           'print myJoint\n',
                           'listRelatives( myJoint, c = True)\n',
                           'pm.listRelatives( myJoint, c = True)\n',
                           'if pm.listRelatives( myJoint, c = True) is None:'\
                           '\n',
                           'if len(pm.listRelatives( myJoint, c = True)) == '\
                           '0:\n',
                           "\tprint 'there is no child'\n",
                           'print myList[-1]\n',
                           'myList[-1]\n',
                           'type(myList[-1])\n',
                           "'sadf'.ljust(32)\n",
                           "'sadf'.center(32)\n",
                           "'*' * 10\n",
                           "'*' * 20\n",
                           'range(10,3,-1)\n',
                           'range(a,s)\n',
                           'myList.insert(2, range(11,15))\n',
                           'myList = origMyList\n',
                           'myList.insert(2, range(11,15)[:])\n',
                           'origMyList = myList\n',
                           'myList.append(range(11,15))\n',
                           'myList = []\n',
                           'myList.append(0)\n',
                           'myList.append(1)\n',
                           'myList.append(2)\n',
                           'myList.append(3)\n',
                           'myList.append(4)\n',
                           'myList.append(5)\n',
                           'for i in range(len(myList)-1,-1,-1):\n',
                           '\tprint i\n',
                           'myList.remove(5)\n',
                           'print myList\n',
                           "myList[0] = 'a'\n",
                           "myList[1] = 'b'\n",
                           "myList[2] = 'c'\n",
                           "myList[3] = 'd'\n",
                           "myList[4] = 'e'\n",
                           "myList[5] = 'f'\n",
                           "myList.append('f')\n",
                           'myList.remove(1)\n',
                           'myList.pop(0)\n',
                           'myList\n',
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb')\n",
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb',f=True)\n",
                           'pm.ls\n',
                           "pm.ls(type='joint')\n",
                           'import oyRigTools as oyRT\n',
                           'pm.undo\n',
                           'reload(oyRT)\n',
                           'myRigger = oyRT.oyLimbRigger()\n',
                           "myRigger.set_baseJoint('joint1')\n",
                           'myRigger.setupLimb()\n',
                           'pm.undo()\n',
                           '[1,2,3] * 2\n',
                           '[1,2,3] * -1\n',
                           'import maya._OpenMaya\n',
                           'import pymel\n',
                           'pymel.loadPlugin("closestPointOnCurve")\n',
                           'pymel.loadPlugin("spClosestPointOnCurve")\n',
                           'pymel.loadPlugin("closestPointOnCurve.py")\n',
                           "cPOC = pymel.createNode('spClosestPointOnCurve')"\
                           "\n",
                           'cPos\n',
                           'cPOC\n',
                           'exit()\n',
                           'import pymel as pm\n',
                           'pm.ls()\n',
                           "open('/home/ozgur/maya/projects/default/scenes/c"\
                           "losestPointOnCurve_test_v001.ma')\n",
                           "pm.fileOpen('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.openFile('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.ls(type='nurbsCurve')\n",
                           "pm.ls(type='transform')\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('pos') )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t') )\n",
                           'outParam = 0.0\n',
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), outParam, 0.001, 'wor"\
                           "ld' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), true, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 'worl"\
                           "d' )\n",
                           ' import maya.OpenMaya as OpenMaya\n',
                           'import maya\n',
                           'help\n',
                           'help()\n',
                           'modules\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #23'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['all(myRigger)\n',
                           'classmethod(myRigger)\n',
                           'locals\n',
                           'locals()\n',
                           'repr(oyRT)\n',
                           'myRigger = oyRT.oyRigger()\n',
                           'repr(myRigger)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3)\n',
                           'reload(oyRigTools)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, useSplit=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=False)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=15,'\
                           ' us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=5, '\
                           'us=True)\n',
                           'myRigger\n',
                           'myList = [1]\n',
                           'print myList[1]\n',
                           'print myList[0]\n',
                           'pm.Joint()\n',
                           'myJoint = pm.Joint()\n',
                           'print myJoint\n',
                           'listRelatives( myJoint, c = True)\n',
                           'pm.listRelatives( myJoint, c = True)\n',
                           'if pm.listRelatives( myJoint, c = True) is None:'\
                           '\n',
                           'if len(pm.listRelatives( myJoint, c = True)) == '\
                           '0:\n',
                           "\tprint 'there is no child'\n",
                           'print myList[-1]\n',
                           'myList[-1]\n',
                           'type(myList[-1])\n',
                           "'sadf'.ljust(32)\n",
                           "'sadf'.center(32)\n",
                           "'*' * 10\n",
                           "'*' * 20\n",
                           'range(10,3,-1)\n',
                           'range(a,s)\n',
                           'myList.insert(2, range(11,15))\n',
                           'myList = origMyList\n',
                           'myList.insert(2, range(11,15)[:])\n',
                           'origMyList = myList\n',
                           'myList.append(range(11,15))\n',
                           'myList = []\n',
                           'myList.append(0)\n',
                           'myList.append(1)\n',
                           'myList.append(2)\n',
                           'myList.append(3)\n',
                           'myList.append(4)\n',
                           'myList.append(5)\n',
                           'for i in range(len(myList)-1,-1,-1):\n',
                           '\tprint i\n',
                           'myList.remove(5)\n',
                           'print myList\n',
                           "myList[0] = 'a'\n",
                           "myList[1] = 'b'\n",
                           "myList[2] = 'c'\n",
                           "myList[3] = 'd'\n",
                           "myList[4] = 'e'\n",
                           "myList[5] = 'f'\n",
                           "myList.append('f')\n",
                           'myList.remove(1)\n',
                           'myList.pop(0)\n',
                           'myList\n',
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb')\n",
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb',f=True)\n",
                           'pm.ls\n',
                           "pm.ls(type='joint')\n",
                           'import oyRigTools as oyRT\n',
                           'pm.undo\n',
                           'reload(oyRT)\n',
                           'myRigger = oyRT.oyLimbRigger()\n',
                           "myRigger.set_baseJoint('joint1')\n",
                           'myRigger.setupLimb()\n',
                           'pm.undo()\n',
                           '[1,2,3] * 2\n',
                           '[1,2,3] * -1\n',
                           'import maya._OpenMaya\n',
                           'import pymel\n',
                           'pymel.loadPlugin("closestPointOnCurve")\n',
                           'pymel.loadPlugin("spClosestPointOnCurve")\n',
                           'pymel.loadPlugin("closestPointOnCurve.py")\n',
                           "cPOC = pymel.createNode('spClosestPointOnCurve')"\
                           "\n",
                           'cPos\n',
                           'cPOC\n',
                           'exit()\n',
                           'import pymel as pm\n',
                           'pm.ls()\n',
                           "open('/home/ozgur/maya/projects/default/scenes/c"\
                           "losestPointOnCurve_test_v001.ma')\n",
                           "pm.fileOpen('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.openFile('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.ls(type='nurbsCurve')\n",
                           "pm.ls(type='transform')\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('pos') )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t') )\n",
                           'outParam = 0.0\n',
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), outParam, 0.001, 'wor"\
                           "ld' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), true, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 'worl"\
                           "d' )\n",
                           ' import maya.OpenMaya as OpenMaya\n',
                           'import maya\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #24'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #25'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['locals()\n',
                           'repr(oyRT)\n',
                           'myRigger = oyRT.oyRigger()\n',
                           'repr(myRigger)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3)\n',
                           'reload(oyRigTools)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, useSplit=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=False)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=15,'\
                           ' us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=5, '\
                           'us=True)\n',
                           'myRigger\n',
                           'myList = [1]\n',
                           'print myList[1]\n',
                           'print myList[0]\n',
                           'pm.Joint()\n',
                           'myJoint = pm.Joint()\n',
                           'print myJoint\n',
                           'listRelatives( myJoint, c = True)\n',
                           'pm.listRelatives( myJoint, c = True)\n',
                           'if pm.listRelatives( myJoint, c = True) is None:'\
                           '\n',
                           'if len(pm.listRelatives( myJoint, c = True)) == '\
                           '0:\n',
                           "\tprint 'there is no child'\n",
                           'print myList[-1]\n',
                           'myList[-1]\n',
                           'type(myList[-1])\n',
                           "'sadf'.ljust(32)\n",
                           "'sadf'.center(32)\n",
                           "'*' * 10\n",
                           "'*' * 20\n",
                           'range(10,3,-1)\n',
                           'range(a,s)\n',
                           'myList.insert(2, range(11,15))\n',
                           'myList = origMyList\n',
                           'myList.insert(2, range(11,15)[:])\n',
                           'origMyList = myList\n',
                           'myList.append(range(11,15))\n',
                           'myList = []\n',
                           'myList.append(0)\n',
                           'myList.append(1)\n',
                           'myList.append(2)\n',
                           'myList.append(3)\n',
                           'myList.append(4)\n',
                           'myList.append(5)\n',
                           'for i in range(len(myList)-1,-1,-1):\n',
                           '\tprint i\n',
                           'myList.remove(5)\n',
                           'print myList\n',
                           "myList[0] = 'a'\n",
                           "myList[1] = 'b'\n",
                           "myList[2] = 'c'\n",
                           "myList[3] = 'd'\n",
                           "myList[4] = 'e'\n",
                           "myList[5] = 'f'\n",
                           "myList.append('f')\n",
                           'myList.remove(1)\n',
                           'myList.pop(0)\n',
                           'myList\n',
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb')\n",
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb',f=True)\n",
                           'pm.ls\n',
                           "pm.ls(type='joint')\n",
                           'import oyRigTools as oyRT\n',
                           'pm.undo\n',
                           'reload(oyRT)\n',
                           'myRigger = oyRT.oyLimbRigger()\n',
                           "myRigger.set_baseJoint('joint1')\n",
                           'myRigger.setupLimb()\n',
                           'pm.undo()\n',
                           '[1,2,3] * 2\n',
                           '[1,2,3] * -1\n',
                           'import maya._OpenMaya\n',
                           'import pymel\n',
                           'pymel.loadPlugin("closestPointOnCurve")\n',
                           'pymel.loadPlugin("spClosestPointOnCurve")\n',
                           'pymel.loadPlugin("closestPointOnCurve.py")\n',
                           "cPOC = pymel.createNode('spClosestPointOnCurve')"\
                           "\n",
                           'cPos\n',
                           'cPOC\n',
                           'exit()\n',
                           'import pymel as pm\n',
                           'pm.ls()\n',
                           "open('/home/ozgur/maya/projects/default/scenes/c"\
                           "losestPointOnCurve_test_v001.ma')\n",
                           "pm.fileOpen('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.openFile('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.ls(type='nurbsCurve')\n",
                           "pm.ls(type='transform')\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('pos') )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t') )\n",
                           'outParam = 0.0\n',
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), outParam, 0.001, 'wor"\
                           "ld' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), true, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 'worl"\
                           "d' )\n",
                           ' import maya.OpenMaya as OpenMaya\n',
                           'import maya\n',
                           'help\n',
                           'help()\n',
                           'modules\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #26'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #27'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #28'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ["''.split('.')\n",
                           "''.split('.')[-1]\n",
                           "'.ma'.split('.')[-1]\n",
                           "'ma'.split('.')[-1]\n",
                           'os.path.extsep\n',
                           "project = oyPM.Project('TEST_2')\n",
                           "project.setProject('TEST_2')\n",
                           "project.setProject('TEST')\n",
                           'project.getSequenceNames()\n',
                           "extensionsToIgnore = ['smr','txt','swatch']\n",
                           "','.join(extensionsToIgnore)\n",
                           'bool(str(True))\n',
                           'bool(str(False))\n',
                           'bool(eval(False))\n',
                           'bool(eval(str(False)))\n',
                           'str(False)\n',
                           'str(True)\n',
                           'bool(eval(str(0)))\n',
                           'bool(eval(str(1)))\n',
                           "myAsset = Asset( 'TEST_2', 'DENEME_SEQ_NOSUBD' )"\
                           "\n",
                           'myAssetInfo = dict()\n',
                           "myAssetInfo['baseName'] = 'SH001'\n",
                           "myAssetInfo['subName'] = None\n",
                           "myAssetInfo['typeName'] = 'ANIMATION'\n",
                           "myAssetInfo['rev'] = 0\n",
                           "myAssetInfo['ver'] = 1\n",
                           "myAssetInfo['userInitials'] = 'ts'\n",
                           "myAssetInfo['notes'] = ''\n",
                           'myAsset.getAllVersions()\n',
                           'for asset in myAsset.getAllVersions():\n',
                           "os.path.splitext('deneme.ma')\n",
                           "os.path.splitext('deneme')\n",
                           'myAsset.getLatestRevision()\n',
                           'myAsset.getLatestRevision()[1]\n',
                           "myAsset = oyPM.Asset( 'TEST_2', 'DENEME_SEQ_NOSU"\
                           "BD' )\n",
                           'myAsset.setInfoVariables( **myAssetInfo )\n',
                           'myAsset.getLatestVersion()[1]\n',
                           'myAsset.isValidAsset()\n',
                           'myAssetInfo2 = dict()\n',
                           "myAssetInfo2['baseName'] = 'SH001'\n",
                           "myAssetInfo2['typeName'] = 'ANIMATION'\n",
                           "myAssetInfo2['rev'] = 0\n",
                           "myAssetInfo2['ver'] = 1\n",
                           "myAssetInfo2['userInitials'] = 'oy'\n",
                           'myAsset2.setInfoVariables( myAssetInfo2)\n',
                           ' print key, myAssetInfo2[key]\n',
                           'for key in myAssetInfo2.keys:\n',
                           'for key in myAssetInfo2.keys():\n',
                           '\tprint key, myAssetInfo2[key]\n',
                           'myAsset2._hasBaseInfo\n',
                           'myAsset2._hasFullInfo\n',
                           "os.path.join('adfa',None)\n",
                           'myAsset2._parentSequence._noSubNameField\n',
                           'myAsset2.getFileName()\n',
                           'print myAsset2.getFileName()\n',
                           'myAsset2.isValidAsset()\n',
                           'myAsset2._extension\n',
                           "myAsset2 = oyPM.Asset( 'TEST_2', 'DENEME_SEQ_NOS"\
                           "UBD' )\n",
                           'myAsset2.setInfoVariables( **myAssetInfo2)\n',
                           'myAsset2.getAllVersions()\n',
                           'for asset in myAsset2.getAllVersions():\n',
                           '\tasset.getFileName()\n',
                           'myAsset2.getLatestRevision()\n',
                           'myAsset2.getLatestVersion()\n',
                           "myNewAsset = oyPM.Asset('TEST_2','DENEME_SEQ_NOS"\
                           "UBD')\n",
                           'myInfoVars = dict()\n',
                           "myInfoVars['baseName'] = 'SH001'\n",
                           "myInfoVars['subName'] = ''\n",
                           "myInfoVars['typeName'] = 'ANIMATION'\n",
                           "myInfoVars['rev'] = 1\n",
                           "myInfoVars['rev'] = 0\n",
                           "myInfoVars['ver'] = 1\n",
                           "myInfoVars['userInitials'] = 'oy'\n",
                           "myInfoVars['notes'] = ''\n",
                           'myNewAsset.setInfoVariables( **myInfoVars)\n',
                           'myNewAsset.getLatestRevision()\n',
                           'myNewAsset._baseExists\n',
                           'myNewAsset.getAllVersions()\n',
                           'aSeq1 = oyPM.Sequence()\n',
                           'aSeq1.getAllAssets()\n',
                           "aSeq1 = oyPM.Sequence('TEST','SEQ1')\n",
                           "aSeq1 = oyPM.Sequence('TEST_2','DENEME_SEQ')\n",
                           'for asset in aSeq1.getAllAssets():\n',
                           '\tprint asset.getFileName()\n',
                           'reload(oyPM)\n',
                           'oyPM.UI()\n',
                           'import oyProjectManager as oyPM\n',
                           'oyPM.__file__\n',
                           'oyPM.__name__\n',
                           'oyPM.__version__\n',
                           'oyPM.__builtins__\n',
                           'oyPM.__doc__\n',
                           'import os\n',
                           "os.path.exists('test.xml')\n",
                           "os.path.exists('./test.xml')\n",
                           "open('./test.xml',mode='w')\n",
                           "newFile = open('./test.xml',mode='w')\n",
                           "newFile.writelines('test\\ntest')\n",
                           'newFile.close()\n',
                           "os.path.exists('oyProjectManager_settings.xml')\n"]},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137}}
proj.env-vars = {None: ('default',
                        [''])}
proj.indent-style-policy = 'warn'
proj.pyexec = {None: ('custom',
                      '$(MAYA_LOCATION)/bin/mayapy')}
proj.pypath = {None: ('custom',
                      '$(PYTHONDEV):$(PYTHONDEV)/pymel:$(PYTHONDEV)/oy-maya-'\
                      'scripts/oyTools:$(MAYA_LOCATION)/bin/')}
search.search-history = [u'minidom',
                         u'getPathVariablesFromMaya',
                         u'getPathVariablesFromMaya4',
                         u'_projectManagerFolderName',
                         u'_projectManagerFolder',
                         u'_projectManagerFullPath',
                         u'shutil',
                         u'print',
                         u'RangeConverter',
                         u'_database',
                         u'_defaultFilesList',
                         u'_nullOptionString',
                         u'_maxNotesCount',
                         u'updatePathVariables',
                         u'minidom.',
                         u'separete',
                         u'self.fileName',
                         u'self.fileFullPath',
                         u'fillFieldsFromFileInfo',
                         u'getFileNameFromMaya']
